#ifndef CPP_TINYLIGHT_MODEL_H
#define CPP_TINYLIGHT_MODEL_H

#include <stdio.h>
#define DIM_INPUT_1 12
#define DIM_INPUT_2 9
#define DIM_LAYER_1 18
#define DIM_LAYER_2 16
#define DIM_OUTPUT 9
#define int16_max 32767
#define int16_min -32768

namespace tiny_light {
    // store message from PC
    char str_buffer[300];
    uint8_t str_length;

    // placeholder
    int16_t l1_lhs_1[DIM_INPUT_1];
    int16_t l1_lhs_2[DIM_INPUT_2];
    int16_t l1_sub_1[DIM_LAYER_1];
    int16_t l1_sub_2[DIM_LAYER_1];
    int16_t l1_sum[DIM_LAYER_1];
    int16_t l2_result[DIM_LAYER_2];
    int16_t l3_result[DIM_OUTPUT];

    // layer 1 sub 1
    const int32_t l1_quan_multiplier_w_1 = 1816691712L;
    const uint8_t l1_quan_right_shift_w_1 = 46;
    const int32_t l1_quan_multiplier_b_1 = 1398469632L;
    const uint8_t l1_quan_right_shift_b_1 = 36;
    const PROGMEM int16_t l1_rhs_1[DIM_INPUT_1 * DIM_LAYER_1] = {
            -20638, 610, 3204, 15224, -782, -23859, 16070, -9811, -6324, 11090, -145, 723, -7791, 12897, -4918, 21878, 1703, -1031, 15538, 5258, 8127, 6715, -25083, 3695, -510, 15638, 5926, 9902, -20161, 501, 11753, 13849, -573, 12820, 4199, 920, -331, -501, 3559, -2149, -3570, -962, -12748, 1256, -4586, -16565, -3393, -14042, -14171, -13069, -5033, -11045, 13520, -2996, -6186, 6715, 20650, 224, 3238, -21776, 17215, -14150, 3405, 7540, 3138, 14507, -6701, 2469, 10296, 6803, -2875, 8172, -9021, 5870, 20086, 5996, -3573, -4684, 3396, 5131, -10120, 23938, -3766, 4732, 13709, 12272, -3429, 9810, 3177, -382, 1012, -8695, -6227, -1707, -4615, -699, -17383, 6131, -8205, -17683, -15968, -3918, -12893, -13349, -6185, -12812, -8099, -18011, -6166, 23322, 15662, -339, -3994, -12220, 12792, 20095, -28396, 11380, 4366, 12021, 19957, 18990, -18130, 12274, -7478, 13139, 5757, 3459, 189, 5820, 7068, 3478, 1578, 1285, -3067, 2895, 3182, 4774, 6478, 2656, 11371, 2888, 51, 1404, -8386, 1669, -19805, 5054, -17636, 15229, -7429, -10496, -2257, -9790, 5546, 3934, -1609, -13252, 5854, -14711, 13733, -13425, -20668, 18236, 12825, -20758, 1502, -18833, 14194, -10173, -21653, 14408, -6973, 23828, -493, 15486, -15469, 17074, -32768, 2471, 8569, 13239, 18533, 8608, -2849, 16499, 2446, 19855, 4505, 10020, -6810, 6092, 19661, 14629, -1778, 16685, 3940, -3584, 28700, -21738, 1216, 8860, 24914, -2507, -1384, 16047, 19402, -9887, -7808, -10833, -4343, -3763, 20865, -2831, 12675, -2847
    };
    const int16_t l1_bias_1[DIM_LAYER_1] = {
            13692, 1116, 17223, 3080, 16956, -12923, 10134, 18017, -1760, 3769, -6700, 251, 2643, 13115, 1881, 14029, -4621, 32767
    };

    // layer 1 sub 2
    const int32_t l1_quan_multiplier_w_2 = 1601320576L;
    const uint8_t l1_quan_right_shift_w_2 = 46;
    const int32_t l1_quan_multiplier_b_2 = 1581473536L;
    const uint8_t l1_quan_right_shift_b_2 = 37;
    const PROGMEM int16_t l1_rhs_2[DIM_INPUT_2 * DIM_LAYER_1] = {
            -11408, -3707, -11910, -15412, -26028, 811, -14204, -12856, 22897, -9949, -5503, -10529, -8033, -11603, -4771, -16443, 6863, -25982, 22939, 3206, 185, 11281, 5839, 11647, 18845, 15251, 7680, 18702, 27683, 12557, 12720, 4466, -4363, 5479, -429, 11851, 9931, 18694, 992, 7074, 12728, 32767, 7895, 7506, 1106, 7370, 9909, 10351, 13023, 24990, 1424, 12936, 14515, 19367, -11564, -326, 16245, -7166, 1804, -17107, -6616, -3852, -2476, 3793, -6581, -3041, -475, 951, -5742, -5066, 1200, -10468, -17989, -10895, 10368, -15121, -13123, -13962, -4394, -25282, 23728, -5534, -9179, -1624, -7533, -6198, -9103, -7422, 8038, -6412, 16873, 16241, 7357, 24299, 11921, 9252, 28894, 12121, -2526, 19916, 32241, 9670, 272, 27735, -7716, 28073, -4849, 22088, 7637, 17829, 3712, 6362, -9214, 9232, 18418, 22345, 3450, 18097, 4873, 12994, 19300, 2226, -12074, -6369, -14517, 3482, -12102, 7723, 7013, -6253, 6318, 2491, -2031, -4278, 2709, -1148, -8570, -1440, -4402, 10734, -1988, 840, 16289, 4287, 7474, 18833, 8591, 1624, 45, 12048, 288, 10977, 2187, 10083, -4332, 13261, 18715, 14887, -6667, 17217, 8609, 9228
    };
    const int16_t l1_bias_2[DIM_LAYER_1] = {
            19512, -10596, -3991, 15302, 8966, -2027, -12644, 17254, 13308, -9981, 32767, -11657, -7529, -7020, -2810, 4195, 26994, 2892
    };

    // layer 1 sum
    const int32_t l1_quan_multiplier_sub1 = 1745212928L;
    const uint8_t l1_quan_right_shift_sub1 = 32;
    const int32_t l1_quan_multiplier_sub2 = 1488185984L;
    const uint8_t l1_quan_right_shift_sub2 = 31;

    // layer 2
    const int32_t l2_quan_multiplier_w = 2060092544L;
    const uint8_t l2_quan_right_shift_w = 47;
    const int32_t l2_quan_multiplier_b = 2081718656L;
    const uint8_t l2_quan_right_shift_b = 39;
    const PROGMEM int16_t l2_rhs[DIM_LAYER_1 * DIM_LAYER_2] = {
            707, 1704, -168, 10738, 2150, 290, -397, 4177, -11981, 9973, -5482, -443, -9871, -6621, -5545, 629, 11918, -12572, 1602, -1131, 6752, 3243, -4937, -2091, -1059, -5574, 4773, 7178, 4591, 2663, -9447, -683, -2892, -10410, 390, -11168, -519, 2318, 242, 4616, -18393, -1401, -4053, -5960, -7361, -11633, 2188, 5422, -1277, 3113, -7173, 11312, -2534, -9883, -713, 4962, 1060, 168, 9264, -7362, 8124, -16355, 3701, -2448, -11886, -23994, 5778, -12031, 18529, 20914, -8142, -9925, -14447, 9768, -1793, 7344, -9223, 17169, 4679, 10572, 11503, 1596, -1543, 18043, -12495, -6227, -3667, 17805, -8630, -3141, -11205, 1630, -2662, 1262, 2836, 3404, -7637, -14956, 3743, -5551, 4645, -4332, -2817, -6416, 9764, -2550, -8811, 7056, 4300, 448, -7150, 19933, 709, 4508, -1707, 9116, 2323, -4235, 3915, -6764, -13104, 10685, 2901, -5640, -8360, -9044, 3184, -7640, -3605, 6920, -13715, 17418, 7313, -18830, -4603, 13355, 9690, 9773, -8643, -2112, -4563, -13353, -5654, -14233, 9061, -17251, 4618, -591, -3636, 15868, -5024, -5369, 8844, -6533, -1293, -6389, 1336, 6840, -970, 5517, 1583, -10048, -3532, 14766, 2247, 3556, -6914, 12502, 5729, -4271, 4366, -4238, 989, -19206, -3241, 111, 8530, -948, 8833, 5789, -6310, 7444, -3263, 3266, 8541, -6802, 1862, -8751, -2522, 12754, -6257, 17187, 6147, 3803, 8174, 1349, 2079, 9165, -6688, 658, -9372, 4228, 19536, -3672, -16246, -3273, -4332, 9412, -16139, -26172, 25357, -17052, 23259, 32767, 4774, 4657, -10024, -8447, 8028, -1216, -32377, 13014, 895, 25169, 16874, -9183, -7088, 9668, -9331, -3885, -7492, -6032, 18955, 6325, 2909, -8859, 10736, -15007, -8602, 2228, -3759, -19563, 2586, 5332, 21624, 7785, -8180, -3591, 9659, -10125, -846, -3715, -22442, 6867, 2832, 2166, 15714, 22193, -8383, 17512, -4860, -6355, -7208, 21177, -1167, 9033, 21184, -6194, 12064, -14579, -10148, -24279, -16621, -27698, 8242, -19515, 8918, 24187, -9033, -6583, -21300, 6525, 6487, -3180, -3527, 14346, -2547, 21239
    };
    const int16_t l2_bias[DIM_LAYER_2] = {
            -19186, -27280, -9530, -7807, 12572, 1903, -1359, -2882, -32768, 16256, 5383, 1097, -12628, -8758, -1926, 2978
    };

    // layer 3
    const int32_t l3_quan_multiplier_w = 1643181184L;
    const uint8_t l3_quan_right_shift_w = 45;
    const int32_t l3_quan_multiplier_b = 2135235840L;
    const uint8_t l3_quan_right_shift_b = 38;
    const PROGMEM int16_t l3_rhs[DIM_LAYER_2 * DIM_OUTPUT] = {
            3653, -1600, 12928, 14244, 16118, 12217, 12880, 14637, 14490, 17652, 6637, 20893, 16899, 26345, 17791, 20531, 7321, 7287, 7228, 336, -5270, -4397, -5867, -5509, 5516, -12988, -2393, 12844, 19131, 16868, 7868, 9279, 8746, 14291, 4771, 15190, -4967, -21813, -9881, 3857, -824, 9509, -7291, -7980, -11760, -26146, -2850, 3901, -9427, -13262, -10588, -17177, -8958, -8556, -20685, 9491, 10675, 3134, -6245, 3527, -16940, -13860, -1284, 9777, 11778, 7455, 6742, 15597, 10043, -851, 16315, 14939, 25570, 24009, 20361, 11998, 19184, 22966, -2808, 7523, 13465, -16330, -16034, -18417, -12994, -16401, -14222, -14027, -12368, -20387, -5297, -9973, 3964, 7735, -3079, -3112, 4491, 5865, -5537, 12196, 1883, 11724, -3323, 26768, 22542, 20425, 25023, 1508, -6941, 32767, 1905, 11906, 13224, -11144, 19930, 17553, 14099, -1441, -4671, -12002, -12711, 11748, -11707, -1381, -4449, 4113, 4482, 3506, -10341, -11082, -7277, -13322, -11048, -2286, 662, 3002, -1576, -17328, -15382, -6221, -12310, -2986, -2994, -6116
    };
    const int16_t l3_bias[DIM_OUTPUT] = {
            -32768, -4577, -14922, -4446, 4942, 193, 2643, -10962, -13749
    };
}

#endif //CPP_TINYLIGHT_MODEL_H
